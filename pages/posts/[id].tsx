import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import type { NextPage, GetServerSideProps } from "next";
import Head from "next/head";
import CommentModal from "../../components/feed/CommentModal";
import Sidebar from "../../components/sidebar";
import Widgets from "../../components/widgets";
import { EnumNewsArticles } from "../../models/NewsArticle";
import { EnumRandomUsers } from "../../models/RandomUsers";
import Header from "../../components/feed/Header";
import PostCard from "../../components/feed/PostCard";
import { db } from "../../firebase";
import { onSnapshot, doc } from "firebase/firestore";
import { TwittaPost } from "../../models/TwittaPost";

type Props = {
  articles: EnumNewsArticles;
  randomUsers: EnumRandomUsers;
};

const PostPage: NextPage<Props> = ({ articles, randomUsers }) => {
  const router = useRouter();
  const query = router.query;
  const [post, setPost] = useState<TwittaPost>();

  useEffect(() => {
    if (query && query.id) {
      let id = query.id as string;
      onSnapshot(doc(db, "posts", id), (snapshot: any) => {
        if (snapshot && snapshot.data()) {
          const tPost: TwittaPost = {
            documentId: snapshot.id,
            id: snapshot.data().id,
            image: snapshot.data().image,
            name: snapshot.data().name,
            text: snapshot.data().text,
            timestamp: snapshot.data().timestamp,
            userImg: snapshot.data().userImg,
            username: snapshot.data().username,
          };

          setPost(tPost);
        }
      });
    }
  }, [db, query]);

  return (
    <div>
      <Head>
        <title>Post Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex min-h-screen mx-auto ">
        <Sidebar />

        <div className="xl:ml-[370px] border-l border-r border-gray-200 xl:min-w-[576px] sm:ml-[73px] flex-grow max-w-xl">
          <Header
            showSparkIcon={false}
            headerTitle="Tweet"
            showBackIcon={true}
          />

          {post && (
            <PostCard
              key={post.documentId}
              postId={post.documentId}
              post={post}
            />
          )}
        </div>

        <Widgets articles={articles} randomUsers={randomUsers} />

        <CommentModal />
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  // NEWS FREE API
  const news = await fetch(
    "https://saurav.tech/NewsAPI/top-headlines/category/business/us.json"
  );
  const newsData = await news.json();

  // RANDOM USERS FREE API
  const randomUsers = await fetch(
    "https://randomuser.me/api/?results=30&inc=name,login,picture"
  );
  const usersData = await randomUsers.json();

  return {
    props: {
      articles: newsData.articles,
      randomUsers: usersData.results,
    },
  };
};

export default PostPage;
